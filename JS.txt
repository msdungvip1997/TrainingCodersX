***Data type
	Primitive types:
	- number
	- string ... console.log('Hello, I\'m Dung');
	- boolean
	
	Specical types:
	- null
	- undefined
	
	Reference types:
	- array
	- object
	
***Arithmetic Operators
	1. ++ -- (increment decrement)
	2. * / %
	3. + -
	
***Assigment operators
	4. =	+=	-=	*=	/=
	
***Object methods
	var myDog = {
		weight: 5,
		name: 'Leo',
		bark: function() {	//function mà ko biết tên được gọi là anonymous function
			console.log('Meo meo...');
		}
	};

***Phép so sánh
	1. ==
	2. !=
	
***Vòng lặp for
	1. for ... of
	2. for ... in


***Methods của Array
	1. a.concat(b) ===> lối 2 mảng vs nhau
	2. a.push(b) ===> thêm phần tử mới vào mảng ở vị trí cuối cùng
	3. a.pop() ===> lấy ra phân tử cuối cùng và thay đổi mảng
	4. a.shift() ===> đẩy phẩn tử đầu tiên ra khỏi mảng và thay đổi mảng
	5. a.unshift() ===> thêm 1 phần tử vào đầu mảng
	6. a.slice ===>
	7. a.splice(i, 1) ===> xóa 1 phần tử có index = i

***Callback

***array.map
	- dùng để chuyển đổi từ 1 mảng này sang mảng khác thông qua tranform function
	- map sẽ trả về giá trị mới

***array.filter
	- filter có nhiệm vụ lọc ra những phần tử ko thỏa mãn yêu cầu và chỉ cho những
	phần tử thỏa mãn đi qua
	- filter sẽ trả về true hoặc false
	
***array.find
	- Gần giống filter khi find cũng sẽ lọc qua các phần tử trong mảng nếu phần nào
	thỏa mãn điều kiện thì sẽ được trả về (sau khi tìm được phần tử thỏa mãn thì find
	sẽ dừng lại và không duyệt tiếp tục phần tử nào nữa)
	- find sẽ trả về 1 phần tử hoặc 0 phần tử nào thỏa mãn
	
***array.reduce
	- reduce sẽ lấy 2 phần tử đầu tiền rồi đưa vào 1 function nào đó rồi cho ra kết quả
	và kết quả này sẽ được tiếp tục kết hợp với phần tử kế tiếp để cho ra kết quả tiếp
	(quá trình này sẽ lặp lại cho đến khi tới phần tử cuối cùng và kết quả cho ra sẽ là
	kết quả cuối cùng)
	- init thông thường sẽ được chọn dựa trên kết quả cuối cùng mà chúng ta muốn ra (theo
	kiểu dữ liệu)
	
***array.sort(function(a, b) {})
	- sort method sẽ trả về 1 mảng đã được sắp xếp
	- Quy tắc 1 là nếu sort function trả về giá trị < 0 thì a sẽ được sắp xếp ở trước b
	- Quy tắc 2 là nếu sort function trả về giá trị > 0 thì a sẽ được xếp sau b
	- Quy tắc 3 là nếu sort function trả về giá trị = 0 thì a và b sẽ không hoán đổi vị trí

***Math object
	1. Math.PI
	2. Math.ceil(number) ===> làm tròn số lên
	3. Math.floor(number) ===> làm tròn số xuống
	4. Math.round(number)
	5. Math.max(x1, x2, ...) ===> trả về thằng max
	6. Math.min(x1, x2, ...) ===> trả về thằng min
	7. Math.random() ===>
	
***`new` keyword

***propotypes
	- Sử dụng để tạo ra 1 hàm chung mà khi các object được tạo ra bởi constructor thì nó sẽ chỉ tới
	hàm này ===> tác dụng giúp tiếp kiệm bộ nhớ vì nếu không dùng protorype mà tạo 1 hàm trong constructor
	thì khi tạo mới 1 object, chúng ta sẽ đồng thời khởi tạo ra 1 hàm ở bộ nhớ cho mỗi 1 object.
	
***Node build-in modules
	- Là những modules có sẵn đã được build trong Nodejs ====== https://nodejs.org/dist/latest-v8.x/docs/api/path.html#path_path_extname_path
	
***npm - Node package manager








